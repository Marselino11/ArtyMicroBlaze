/******************************************************************************
*
* Copyright (C) 2009 - 2014 Xilinx, Inc.  All rights reserved.
*
* Permission is hereby granted, free of charge, to any person obtaining a copy
* of this software and associated documentation files (the "Software"), to deal
* in the Software without restriction, including without limitation the rights
* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
* copies of the Software, and to permit persons to whom the Software is
* furnished to do so, subject to the following conditions:
*
* The above copyright notice and this permission notice shall be included in
* all copies or substantial portions of the Software.
*
* Use of the Software is limited solely to applications:
* (a) running on a Xilinx device, or
* (b) that interact with a Xilinx device through a bus or interconnect.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
* XILINX  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF
* OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
* SOFTWARE.
*
* Except as contained in this notice, the name of the Xilinx shall not be used
* in advertising or otherwise to promote the sale, use or other dealings in
* this Software without prior written authorization from Xilinx.
*
******************************************************************************/

/*
 * helloworld.c: simple test application
 *
 * This application configures UART 16550 to baud rate 9600.
 * PS7 UART (Zynq) is not initialized by this application, since
 * bootrom/bsp configures it to baud rate 115200
 *
 * ------------------------------------------------
 * | UART TYPE   BAUD RATE                        |
 * ------------------------------------------------
 *   uartns550   9600
 *   uartlite    Configurable only in HW design
 *   ps7_uart    115200 (configured by bootrom/bsp)
 */

#include <stdio.h>

#define NUM_MEASUREMENTS 10

// Inisialisasi parameter Kalman
float A = 1.0;     // Matriks transisi keadaan
float C = 1.0;     // Matriks pengukuran
float Q = 0.0001;  // Covariance noise proses (diperbarui)
float R = 0.001;   // Covariance noise pengukuran (diperbarui)

// Inisialisasi variabel keadaan
float x = 0.0642;  // Estimasi awal keadaan (disesuaikan dengan nilai pengukuran awal)
float P = 1.0;     // Covariance awal keadaan

// Fungsi filter Kalman
float kalman_filter(float measurement) {
    // Prediksi
    float x_pred = A * x;
    float P_pred = A * P * A + Q;

    // Update
    float K = P_pred * C / (C * P_pred * C + R);
    x = x_pred + K * (measurement - C * x_pred);
    P = (1 - K * C) * P_pred;

    return x;
}

int main() {
    // Data pengukuran
    float measurements[NUM_MEASUREMENTS] = {0.0642, 0.0363, 0.0187, 0.0225, 0.0461, 0.0825, 0.2631, 0.2411, 0.4638, 0.7828};

    // Proses filter Kalman untuk setiap pengukuran
    for (int i = 0; i < NUM_MEASUREMENTS; i++) {
        float filtered_measurement = kalman_filter(measurements[i]);

        // Penyesuaian nilai filtered_measurement agar tidak terlalu berbeda jauh
        if (filtered_measurement - measurements[i] > 0.1)
            filtered_measurement = measurements[i] + 0.1;
        else if (measurements[i] - filtered_measurement > 0.1)
            filtered_measurement = measurements[i] - 0.1;

        printf("Measurement: %.4f, Filtered: %.4f\n", measurements[i], filtered_measurement);
    }

    return 0;
}
